stuff related to algorithmic composition

pitch.py
    PitchOffs
        a set of pitch offsets 0..11 and optional weights
        can represent
            a scale
            a chord
        unordered

    PitchSet
        a PitchOffs, plus a root pitch
        represents the set of all octave offsets
        of the root pitch plus a pitch offset
        The probabilities carry over
        
        rnd_uniform(lo, hi)
            random pitch in lo..hi
                (need not be in the pitch set)
                if there are none, next_above(lo)
        next_gt(p) next pitch > p
        next_ge(p) next pitch >= p
        next_lt(p)
        next_le(p)
        contains(p)
            does PS contain P?

time_list.py
    a list of times
    density:
        avg notes per second (PFT)
    mode
        periodic
            meaning? say goes from 0 to 1 over 10 sec
            integrate, says we should have 5 notes
            Keep it simple:
            don't allow zero (or small) values
            first note at 0
            t = 0
            loop
                x = pftval(t)
                t += 1/x
        exponential (poisson)
            meaning?
            similar:
            t=0
            loop
                x = pftval(t)
                t += exp(-x)

    should be an iterator?

    time_list_periodic(n,dur)
        n regularly-spaced times
    time_list_random(n, dur)
        random times in 0..dur
    time_list_random_set(n, lo, hi)
        n times separated by random(lo..hi)
    time_list_scale(list, dur)
        scale list to 0..dur
    time_list_snap(list, dt)
        snap to multiples of dt

cloud.py
    a 'cloud' of notes,
    with harmony that can change over time

    harmony shape:
        pitch set
        weight PFT
        start time

    cloud params:
        time_list
        a list of harmony shapes:
            used to choose a pitch set for a note at time t:
            choose randomly, given weights of harmony shapes active at t
        center
            PFT
        width
            PFT
        mode
            random
            cyclic(n)
            up (same as cyclic(1))
            down (same as cyclic(-1))
        no_repeat
    alg:
        last = center
        for each time t
            get lo, hi from PFTs
            pick a harmony shape S
        switch mode
            random:
                i = S.random(lo, hi)
                if no_repeat && n == last
                    i = S.gt(n)
            up:
                i = S.gt(last)
                if i > hi
                    i = S.gt(lo)
            down: similar
            cyclic:
                i = last + n
                if i > hi
                    i -= width
                if i < lo
                    i += width
                i = S.ge(i)

colorednoise.py
    1/f noise and brownian noise
---------------
ideas
scales
    major:          2 2 1 2 2 2 1
    natural minor:  2 1 2 2 1 2 2
    harmonic minor: 2 1 2 2 1 3 1
    melodic minor:  2 1 2 2 2 2 1
        (ascending)
harmonic system
    Given two pitchsets, we can compute their distance
        (the number of pitches in common).
    so given a pitchoffs, we can look at the 11 pitchsets
        and make a graph
        We can move between pitchsets in a 1/f way:
        occasional jumps, drifting back to center
    chord, abstract
        a subset of a pitchoffs
        one is designated as root
    chord, concrete
    chord voicing
        inversion
        spacing
    chord sequence (abstract, concrete)
        chord + scale over time
    voice leading

    motion:
        circle of fifths
        thirds
        stepwise

binary time lists
    recursive binary subdivision
    leave as is, or divide into 2
        or 3?
    sometimes tie to next note

repetition of patterns
    in rhythm seq
    in pitch contour
    in the combination of the above
    in harmony

melodies
    shape: peaks
    what are parameters?

duets
    with same or different rhythm

interlocking melodies
    think of filling in 2-D time/freq space

snippets (like bird songs)
    trill
    scale: up, down, up/down, down/up
    repeated note

streamers
    a high melody; a stream of notes leads up (cresc) to each melody note
    or the opposite

waves
    clouds of low notes surge up and break,
    producing a short cloud of high notes
    (like foam retreating)

curtains
    a 'curtain' of notes
    timing
        density (notes/sec): PFT
        note duration: PFT
        whether regularly spaced or random (Poisson)
    pitch
        distribution
            center
            width
            whether gaussian or uniform
            pitch selection
                random
                    allow repeated notes?
                cyclic
        changing pitch sets:
        chords, scales, (incl. chromatic scale)
        The transitions can be gradual or abrupt.
        the transitions can be based on note volume,
            or note frequency.
            how to describe?
        args
            list of (pitchset, start, PFT)
        alg
            foreach note
                get values of active PFTs
                if vol based
                    cycle through PFTs
                    choose note from that pitchset
                    vol is PFT value
                else
                    choose PFT randomly based on PFT values
                    use note from that pitchset
                    vol is fixed
    examples
    chord seq could be algorithmic,
    or taken from a Bach piece

jitter
    a series of notes, randomly pitch N and N+1.
    Occasionally, with a rhythm, jumping to a melody
